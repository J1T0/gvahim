from flask import Flask, request
from ProtocolParser import *
import httplib

class FlaskServer(object):
	
	
	def __init__(self):
		self.app = Flask(__name__)
		self.peers = []
		self.parser = ProtocolParser()
		self.potocolVer = '0100'

	def runServer(self):
		@self.app.route('/<string:message>')
		def readMassage(message):
			self.parser.parseMessage(message)
			tmp = True
			#checks if the parser was able to parse the message
			if self.parser.dict == {}:
				return '000101'  # invalid protocol ver
			# checks if all the protocol operators are valid with the protocol
			for key in self.parser.dict.keys(): 
				tmp = key in ['00','10','20','30','40','41'] and tmp
			if not tmp:
				return '000101'  # invalid protocol ver
			for key in self.parser.dict:
				if key == '00':
					pass
				elif key == '10':
					if not self.parser.dict[key] == self.protocolVer:
						for i in range(len(self.peers)):
							if self.peers[i][:self.peers[i].index(':')] == request.remote_addr:
								del self.peers[i]
								return '000101'  # invalid protocol ver
							return '000101'  # invalid protocol ver
					return '000100'  # valid protocol ver
				elif key == '20':
					pass
				elif key == '30':
					pass
				elif key == '40':
					pass
				else key == '41':
					pass
			return 'should never get here'
		
		self.app.run(debug=True)

if __name__=='__main__':
	server=FlaskServer()
	server.runServer()
